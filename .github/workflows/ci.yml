name: CI

on:
  push:
    branches: [ main, master, develop ]
  pull_request:

permissions:
  contents: read

jobs:
  backend-tests:
    name: Symfony (PHPUnit)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: mbstring, intl, pdo_sqlite
          coverage: none

      - name: Install Composer deps
        working-directory: backend
        run: composer install --no-interaction --no-progress --prefer-dist

      # Prepare test DB (SQLite file)
      - name: Prepare test DB
        working-directory: backend
        env:
          APP_ENV: test
          DATABASE_URL: "sqlite:///%kernel.project_dir%/var/tests.sqlite"
        run: |
          rm -f var/tests.sqlite
          mkdir -p var
          php bin/console --env=test doctrine:migrations:migrate --no-interaction || \
          php bin/console --env=test doctrine:schema:create

      # Run PHPUnit avec le MÃŠME DATABASE_URL
      - name: Run PHPUnit
        working-directory: backend
        env:
          APP_ENV: test
          DATABASE_URL: "sqlite:///%kernel.project_dir%/var/tests.sqlite"
          SYMFONY_DEPRECATIONS_HELPER: disabled
        run: php bin/phpunit --testdox

  frontend-tests:
    name: Frontend (Vue)
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install deps
        env:
          CI: true
        run: npm ci --legacy-peer-deps

      - name: Lint (optionnel)
        env:
          CI: true
        run: npm run lint --if-present

      - name: Unit Tests
        env:
          CI: true
        run: npm test --if-present -- --ci

      - name: Build (check)
        env:
          CI: true
        run: npm run build --if-present
