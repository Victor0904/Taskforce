name: CI

on:
  push:
    branches: [ main, master, develop ]
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  backend-tests:
    name: Symfony (PHPUnit)
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_DATABASE: app_test
          MYSQL_USER: app
          MYSQL_PASSWORD: secret
          MYSQL_ROOT_PASSWORD: root
        ports: [ "3306:3306" ]
        options: >-
          --health-cmd="mysqladmin ping -h 127.0.0.1 -u root -proot"
          --health-interval=10s --health-timeout=5s --health-retries=10

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, intl, pdo_mysql
          coverage: none

      - name: Cache Composer
        uses: actions/cache@v4
        with:
          path: backend/vendor
          key: composer-${{ hashFiles('backend/composer.lock') }}
          restore-keys: composer-

      - name: Install deps (Composer)
        working-directory: backend
        run: composer install --no-interaction --no-progress --prefer-dist

      - name: Prepare test env & DB
        working-directory: backend
        env:
          DATABASE_URL: "mysql://app:secret@127.0.0.1:3306/app_test"
        run: |
          cp .env.test .env || true
          php bin/console doctrine:database:create --if-not-exists --env=test
          php bin/console doctrine:migrations:migrate --no-interaction --env=test

      - name: Run PHPUnit
        working-directory: backend
        env:
          DATABASE_URL: "mysql://app:secret@127.0.0.1:3306/app_test"
        run: php bin/phpunit --testdox

  frontend-tests:
    name: Frontend (Vue)
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install deps
        run: npm ci

      - name: Lint
        run: npm run lint --if-present

      - name: Unit Tests
        run: npm test --if-present -- --ci --reporters=default

      - name: Build (check)
        run: npm run build --if-present

      - name: Upload build artifact (optionnel)
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: frontend-dist
          path: frontend/dist
          if-no-files-found: ignore
